-- MySQL Script generated by MySQL Workbench
-- Thu Apr  7 12:38:13 2022
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema mydb
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `mydb` DEFAULT CHARACTER SET utf8 ;
USE `mydb` ;

-- -----------------------------------------------------
-- Table `mydb`.`District`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`District` (
  `districtID` VARCHAR(10) NOT NULL,
  `Address` VARCHAR(45) NULL,
  `phoneNo` INT NULL,
  `staffID` INT NULL,
  PRIMARY KEY (`districtID`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Satf Attorney`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Satf Attorney` (
  `staffID` INT NOT NULL,
  `barNo` INT NULL,
  `fName` VARCHAR(15) NULL,
  `lName` VARCHAR(15) NULL,
  `DOB` DATE NULL,
  `District` VARCHAR(15) NULL,
  `phoneNo` INT NULL,
  `caseID` INT NULL,
  `Position` VARCHAR(15) NULL,
  `Salary` FLOAT NULL,
  `District_districtID` VARCHAR(10) NULL,
  `District_districtID1` VARCHAR(10) NOT NULL,
  `Satf Attorney_staffID` INT NULL,
  `Satf Attorney_District_districtID` VARCHAR(10) NULL,
  `Satf Attorney_District_districtID1` VARCHAR(10) NULL,
  PRIMARY KEY (`staffID`, `District_districtID`, `District_districtID1`, `Satf Attorney_staffID`, `Satf Attorney_District_districtID`, `Satf Attorney_District_districtID1`),
  INDEX `fk_Satf Attorney_District_idx` (`District_districtID` ASC) VISIBLE,
  INDEX `fk_Satf Attorney_District1_idx` (`District_districtID1` ASC) VISIBLE,
  INDEX `fk_Satf Attorney_Satf Attorney1_idx` (`Satf Attorney_staffID` ASC, `Satf Attorney_District_districtID` ASC, `Satf Attorney_District_districtID1` ASC) VISIBLE,
  CONSTRAINT `fk_Satf Attorney_District`
    FOREIGN KEY (`District_districtID`)
    REFERENCES `mydb`.`District` (`districtID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Satf Attorney_District1`
    FOREIGN KEY (`District_districtID1`)
    REFERENCES `mydb`.`District` (`districtID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Satf Attorney_Satf Attorney1`
    FOREIGN KEY (`Satf Attorney_staffID` , `Satf Attorney_District_districtID` , `Satf Attorney_District_districtID1`)
    REFERENCES `mydb`.`Satf Attorney` (`staffID` , `District_districtID` , `District_districtID1`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Satf Non-Attorney`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Satf Non-Attorney` (
  `staffID` INT NOT NULL,
  `barNo` INT NULL,
  `fName` VARCHAR(15) NULL,
  `lName` VARCHAR(15) NULL,
  `DOB` DATE NULL,
  `District` VARCHAR(15) NULL,
  `phoneNo` INT NULL,
  `caseID` INT NULL,
  `Position` VARCHAR(15) NULL,
  `Salary` FLOAT NULL,
  `District_districtID` VARCHAR(10) NOT NULL,
  `District_districtID1` VARCHAR(10) NULL,
  `Satf Non-Attorney_staffID` INT NULL,
  `Satf Non-Attorney_District_districtID` VARCHAR(10) NULL,
  `Satf Non-Attorney_District_districtID1` VARCHAR(10) NULL,
  PRIMARY KEY (`staffID`, `District_districtID`, `District_districtID1`, `Satf Non-Attorney_staffID`, `Satf Non-Attorney_District_districtID`, `Satf Non-Attorney_District_districtID1`),
  INDEX `fk_Satf Non-Attorney_District1_idx` (`District_districtID` ASC) VISIBLE,
  INDEX `fk_Satf Non-Attorney_District2_idx` (`District_districtID1` ASC) VISIBLE,
  INDEX `fk_Satf Non-Attorney_Satf Non-Attorney1_idx` (`Satf Non-Attorney_staffID` ASC, `Satf Non-Attorney_District_districtID` ASC, `Satf Non-Attorney_District_districtID1` ASC) VISIBLE,
  CONSTRAINT `fk_Satf Non-Attorney_District1`
    FOREIGN KEY (`District_districtID`)
    REFERENCES `mydb`.`District` (`districtID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Satf Non-Attorney_District2`
    FOREIGN KEY (`District_districtID1`)
    REFERENCES `mydb`.`District` (`districtID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Satf Non-Attorney_Satf Non-Attorney1`
    FOREIGN KEY (`Satf Non-Attorney_staffID` , `Satf Non-Attorney_District_districtID` , `Satf Non-Attorney_District_districtID1`)
    REFERENCES `mydb`.`Satf Non-Attorney` (`staffID` , `District_districtID` , `District_districtID1`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Client`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Client` (
  `caseID` INT NOT NULL,
  `fName` VARCHAR(20) NULL,
  `lName` VARCHAR(20) NULL,
  `DOB` DATE NULL,
  `crimeCharged` VARCHAR(30) NULL,
  `phoneNo` INT NULL,
  `address` VARCHAR(40) NULL,
  `prosecutorID` VARCHAR(5) NULL,
  `pdAttorney` VARCHAR(10) NULL,
  `Satf Attorney_staffID` INT NOT NULL,
  `Satf Attorney_District_districtID` VARCHAR(10) NOT NULL,
  `Satf Attorney_District_districtID1` VARCHAR(10) NOT NULL,
  `Satf Attorney_Satf Attorney_staffID` INT NOT NULL,
  `Satf Attorney_Satf Attorney_District_districtID` VARCHAR(10) NOT NULL,
  `Satf Attorney_Satf Attorney_District_districtID1` VARCHAR(10) NOT NULL,
  `Satf Non-Attorney_staffID` INT NOT NULL,
  `Satf Non-Attorney_District_districtID` VARCHAR(10) NOT NULL,
  `Satf Non-Attorney_District_districtID1` VARCHAR(10) NOT NULL,
  `Satf Non-Attorney_Satf Non-Attorney_staffID` INT NOT NULL,
  `Satf Non-Attorney_Satf Non-Attorney_District_districtID` VARCHAR(10) NOT NULL,
  `Satf Non-Attorney_Satf Non-Attorney_District_districtID1` VARCHAR(10) NOT NULL,
  PRIMARY KEY (`caseID`, `Satf Attorney_staffID`, `Satf Attorney_District_districtID`, `Satf Attorney_District_districtID1`, `Satf Attorney_Satf Attorney_staffID`, `Satf Attorney_Satf Attorney_District_districtID`, `Satf Attorney_Satf Attorney_District_districtID1`, `Satf Non-Attorney_staffID`, `Satf Non-Attorney_District_districtID`, `Satf Non-Attorney_District_districtID1`, `Satf Non-Attorney_Satf Non-Attorney_staffID`, `Satf Non-Attorney_Satf Non-Attorney_District_districtID`, `Satf Non-Attorney_Satf Non-Attorney_District_districtID1`),
  INDEX `fk_Client_Satf Attorney1_idx` (`Satf Attorney_staffID` ASC, `Satf Attorney_District_districtID` ASC, `Satf Attorney_District_districtID1` ASC, `Satf Attorney_Satf Attorney_staffID` ASC, `Satf Attorney_Satf Attorney_District_districtID` ASC, `Satf Attorney_Satf Attorney_District_districtID1` ASC) VISIBLE,
  INDEX `fk_Client_Satf Non-Attorney1_idx` (`Satf Non-Attorney_staffID` ASC, `Satf Non-Attorney_District_districtID` ASC, `Satf Non-Attorney_District_districtID1` ASC, `Satf Non-Attorney_Satf Non-Attorney_staffID` ASC, `Satf Non-Attorney_Satf Non-Attorney_District_districtID` ASC, `Satf Non-Attorney_Satf Non-Attorney_District_districtID1` ASC) VISIBLE,
  CONSTRAINT `fk_Client_Satf Attorney1`
    FOREIGN KEY (`Satf Attorney_staffID` , `Satf Attorney_District_districtID` , `Satf Attorney_District_districtID1` , `Satf Attorney_Satf Attorney_staffID` , `Satf Attorney_Satf Attorney_District_districtID` , `Satf Attorney_Satf Attorney_District_districtID1`)
    REFERENCES `mydb`.`Satf Attorney` (`staffID` , `District_districtID` , `District_districtID1` , `Satf Attorney_staffID` , `Satf Attorney_District_districtID` , `Satf Attorney_District_districtID1`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Client_Satf Non-Attorney1`
    FOREIGN KEY (`Satf Non-Attorney_staffID` , `Satf Non-Attorney_District_districtID` , `Satf Non-Attorney_District_districtID1` , `Satf Non-Attorney_Satf Non-Attorney_staffID` , `Satf Non-Attorney_Satf Non-Attorney_District_districtID` , `Satf Non-Attorney_Satf Non-Attorney_District_districtID1`)
    REFERENCES `mydb`.`Satf Non-Attorney` (`staffID` , `District_districtID` , `District_districtID1` , `Satf Non-Attorney_staffID` , `Satf Non-Attorney_District_districtID` , `Satf Non-Attorney_District_districtID1`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Prosecutor`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Prosecutor` (
  `prosecutorID` VARCHAR(5) NOT NULL,
  `barNo` INT NULL,
  `fName` VARCHAR(15) NULL,
  `lName` VARCHAR(15) NULL,
  `District` VARCHAR(15) NULL,
  `phoneNo` INT NULL,
  `caseID` INT NULL,
  `Client_caseID` INT NOT NULL,
  PRIMARY KEY (`prosecutorID`, `Client_caseID`),
  INDEX `fk_Prosecutor_Client1_idx` (`Client_caseID` ASC) VISIBLE,
  CONSTRAINT `fk_Prosecutor_Client1`
    FOREIGN KEY (`Client_caseID`)
    REFERENCES `mydb`.`Client` (`caseID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `mydb`.`Criminal Case`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `mydb`.`Criminal Case` (
  `caseNo` INT NOT NULL,
  `caseType` VARCHAR(15) NULL,
  `startDate` DATE NULL,
  `endDate` DATE NULL,
  `caseStatus` VARCHAR(40) NULL,
  `Client_caseID` INT NOT NULL,
  PRIMARY KEY (`caseNo`, `Client_caseID`),
  INDEX `fk_Criminal Case_Client1_idx` (`Client_caseID` ASC) VISIBLE,
  CONSTRAINT `fk_Criminal Case_Client1`
    FOREIGN KEY (`Client_caseID`)
    REFERENCES `mydb`.`Client` (`caseID`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
